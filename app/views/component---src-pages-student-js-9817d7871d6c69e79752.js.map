{"version":3,"file":"component---src-pages-student-js-9817d7871d6c69e79752.js","mappings":"+LAKMA,EAAU,CACZ,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAO,IACxC,CAAEF,MAAO,YAAaC,WAAY,aAAcC,MAAO,KACvD,CAAEF,MAAO,WAAYC,WAAY,YAAaC,MAAO,KACrD,CACIF,MAAO,QACPC,WAAY,QACZC,MAAO,MAITC,EAAO,CACT,CAAEC,GAAI,EAAGC,UAAW,QAASC,SAAU,OAAQC,MAAO,wBACtD,CAAEH,GAAI,EAAGC,UAAW,OAAQC,SAAU,SAAUC,MAAO,oBACvD,CAAEH,GAAI,EAAGC,UAAW,QAASC,SAAU,QAASC,MAAO,qBACvD,CAAEH,GAAI,EAAGC,UAAW,UAAWC,SAAU,UAAWC,MAAO,uBAC3D,CAAEH,GAAI,EAAGC,UAAW,QAASC,SAAU,eAAgBC,MAAO,sBAC9D,CAAEH,GAAI,EAAGC,UAAW,OAAQC,SAAU,UAAWC,MAAO,oBACxD,CAAEH,GAAI,EAAGC,UAAW,QAASC,SAAU,SAAUC,MAAO,sBACxD,CAAEH,GAAI,EAAGC,UAAW,UAAWC,SAAU,QAASC,MAAO,2BACzD,CAAEH,GAAI,GAAIC,UAAW,QAASC,SAAU,YAAaC,MAAO,6BAC5D,CAAEH,GAAI,GAAIC,UAAW,OAAQC,SAAU,YAAaC,MAAO,uBAC3D,CAAEH,GAAI,GAAIC,UAAW,OAAQC,SAAU,QAASC,MAAO,sBAG5C,SAASC,IACpB,OACI,uBAAKC,MAAO,CAAEC,OAAQ,IAAKR,MAAO,SAC9B,gBAAC,MAAD,CACIC,KAAMA,EACNJ,QAASA,EACTY,SAAU,EACVC,mBAAoB,CAAC,GACrBC,mBAAiB,IAGrB,gBAAC,IAAD,CAAQC,QAAQ,gBAAgBC,KAAK,MAAK,gBAAC,KAAD,CAAMC,GAAG,aAAT","sources":["webpack://smu-app/./src/pages/student.js"],"sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from \"gatsby\";\n\nconst columns = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'firstname', headerName: 'First Name', width: 300 },\n    { field: 'lastname', headerName: 'Last Name', width: 300 },\n    {\n        field: 'email',\n        headerName: 'Email',\n        width: 300,\n    },\n];\n\nconst rows = [\n    { id: 1, firstname: 'Jacob', lastname: 'Mims', email: 'jacobmims@smu.edu.sg' },\n    { id: 2, firstname: 'Kirk', lastname: 'Graham', email: 'kirkg@smu.edu.sg' },\n    { id: 3, firstname: 'Maeve', lastname: 'Wiley', email: 'wileym@smu.edu.sg' },\n    { id: 4, firstname: 'Natalie', lastname: 'Calizon', email: 'calizonn@smu.edu.sg' },\n    { id: 5, firstname: 'Allie', lastname: 'Ahweh-Marrah', email: 'allieam@smu.edu.sg' },\n    { id: 6, firstname: 'Otis', lastname: 'Milburn', email: 'otism@smu.edu.sg' },\n    { id: 8, firstname: 'Pavan', lastname: 'Sastri', email: 'psastri@smu.edu.sg' },\n    { id: 9, firstname: 'Vignesh', lastname: 'Sinha', email: 'vigneshsinha@smu.edu.sg' },\n    { id: 10, firstname: 'Derek', lastname: 'Stoughton', email: 'derekstoughton@smu.edu.sg' },\n    { id: 11, firstname: 'Mark', lastname: 'Palmisano', email: 'markpalm@smu.edu.sg' },\n    { id: 12, firstname: 'Tony', lastname: 'Testa', email: 'ttesta@smu.edu.sg' }\n];\n\nexport default function DataTable() {\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid\n                rows={rows}\n                columns={columns}\n                pageSize={5}\n                rowsPerPageOptions={[5]}\n                checkboxSelection\n            />\n\n            <Button variant=\"outline-light\" size=\"lg\"><Link to=\"/evalForm\">Go to Eval Form</Link></Button>\n        </div>\n    );\n}\n\n// import React, { useState } from 'react';\n// import * as XLSX from 'xlsx';\n// import DataTable from 'react-data-table-component';\n// import Papa from 'papaparse';\n// import { withRouter } from 'react-router-dom';\n\n// function App() {\n\n//     const [columns, setColumns] = useState([]);\n//     const [data, setData] = useState([]);\n\n//     // fetchCsv() {\n//     //     return fetch('../csv/studentout.csv').then(function (response) {\n//     //         let reader = response.body.getReader();\n//     //         let decoder = new TextDecoder('utf-8');\n\n//     //         return reader.read().then(function (result) {\n//     //             return decoder.decode(result.value);\n//     //         });\n//     //     });\n//     // }\n\n//     async function fetchCsv() {\n//         const response = await fetch('/csv/studentout.csv');\n//         const reader = response.body.getReader();\n//         const result = await reader.read();\n//         const decoder = new TextDecoder('utf-8');\n//         const csv = await decoder.decode(result.value);\n//         console.log('csv', csv);\n//         return csv;\n//     }\n\n//     // process CSV data\n//     const processData = dataString => {\n//         const file = fetchCsv();\n\n//         const reader = new FileReader();\n//         reader.onload = (evt) => {\n//             /* Parse data */\n//             const bstr = evt.target.result;\n//             const wb = XLSX.read(bstr, { type: 'binary' });\n//             /* Get first worksheet */\n//             const wsname = wb.SheetNames[0];\n//             const ws = wb.Sheets[wsname];\n//             /* Convert array of arrays */\n//             const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n//             processData(data);\n//         };\n//         reader.readAsBinaryString(file);\n\n//         const dataStringLines = dataString.split(/\\r\\n|\\n/);\n//         const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n//         const list = [];\n//         for (let i = 1; i < dataStringLines.length; i++) {\n//             const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n//             if (headers && row.length == headers.length) {\n//                 const obj = {};\n//                 for (let j = 0; j < headers.length; j++) {\n//                     let d = row[j];\n//                     if (d.length > 0) {\n//                         if (d[0] == '\"')\n//                             d = d.substring(1, d.length - 1);\n//                         if (d[d.length - 1] == '\"')\n//                             d = d.substring(d.length - 2, 1);\n//                     }\n//                     if (headers[j]) {\n//                         obj[headers[j]] = d;\n//                     }\n//                 }\n\n//                 // remove the blank rows\n//                 if (Object.values(obj).filter(x => x).length > 0) {\n//                     list.push(obj);\n//                 }\n//             }\n//         }\n\n//         // prepare columns list from headers\n//         const columns = headers.map(c => ({\n//             name: c,\n//             selector: c,\n//         }));\n\n//         setData(list);\n//         setColumns(columns);\n//     }\n\n//     // handle file upload\n//     const handleFileUpload = e => {\n//         const file = e.target.files[0];\n//         // const file = '../csv/studentout.csv';\n//         const reader = new FileReader();\n//         reader.onload = (evt) => {\n//             /* Parse data */\n//             const bstr = evt.target.result;\n//             const wb = XLSX.read(bstr, { type: 'binary' });\n//             /* Get first worksheet */\n//             const wsname = wb.SheetNames[0];\n//             const ws = wb.Sheets[wsname];\n//             /* Convert array of arrays */\n//             const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n//             processData(data);\n//         };\n//         reader.readAsBinaryString(file);\n//     }\n\n//     return (\n//         <div>\n//             <h3>Read CSV file in React - <a href=\"https://www.cluemediator.com\" target=\"_blank\" rel=\"noopener noreferrer\">Clue Mediator</a></h3>\n//             <input\n//                 type=\"button\"\n//                 accept=\".csv,.xlsx,.xls\"\n//                 onClick={processData}\n//             />\n//             <DataTable\n//                 pagination\n//                 highlightOnHover\n//                 columns={columns}\n//                 data={data}\n//             />\n//         </div>\n//     );\n// }\n\n// export default App;\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// // import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// // import ThemeProvider from 'react-theme-provider';\n// // import AppBar from 'material-ui/AppBar';\n// import StudentTable from './studentTable';\n// import Selector from './Selector'\n// import * as XLSX from 'xlsx';\n// import DataTable from 'react-data-table-component';\n// import { withRouter } from 'react-router-dom';\n// import { AgGridColumn, AgGridReact } from 'ag-grid-react';\n// import 'ag-grid-community/dist/styles/ag-grid.css';\n// import 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\n// class App extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             question: ['hello'],\n//             query: 1\n//         }\n\n//         this.getStudents(this.state.query)\n//     }\n\n//     getStudents(query) {\n//         axios.get(`queryswitch/${query}`)\n//             .then(res => {\n//                 console.log(res.data)\n//                 this.setState({ questions: res.data })\n//             })\n//     }\n\n//     handleQuery = (queryValue) => {\n//         console.log(queryValue)\n//         this.setState({query: queryValue})\n//         this.getStudents(queryValue)\n//     }\n\n//     render() {\n//         return(\n//             // <ThemeProvider>\n//             //     <div>\n//             //         <AppBar\n//             //             title=\"Students\"\n//             //             showMenuIconButton = {fale}\n//             //         />\n//                     // <Selector onQueryChange={this.handleQuery} query={this.state.query}/>\n//                     // <QuestionTable question={this.state.questions}/>\n//             //     </div>\n//             // </ThemeProvider>\n//             <div>\n//                 <Selector onQueryChange={this.handleQuery} query={this.state.query} />\n//                 <StudentTable question={this.state.questions} />\n//             </div>\n//         )\n//     }\n// }\n\n// export default App;"],"names":["columns","field","headerName","width","rows","id","firstname","lastname","email","DataTable","style","height","pageSize","rowsPerPageOptions","checkboxSelection","variant","size","to"],"sourceRoot":""}